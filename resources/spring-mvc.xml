<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/util
                        http://www.springframework.org/schema/util/spring-util-3.0.xsd
                        http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/task
                        http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!--  开启组件扫描定义 -->
	<context:component-scan base-package="top.yhcj" />
	
	<mvc:resources location="/common/" mapping="/common/**"/>
	
	<!-- 开启 @RequestMapping 注解映射 -->
	<mvc:annotation-driven />
	
	<!-- 开启AOP注解扫描 -->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true"/> -->
	
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<!-- <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean> -->

	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />	JSON转换器
			</list>
		</property>
	</bean> -->

	<!-- 配置freeMarker的模板路径 -->
	<!-- <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		模板文件存放位置 
		<property name="templateLoaderPath" value="/WEB-INF/platform/" />
		<property name="defaultEncoding" value="UTF-8" />
		配置FreeMarker全局变量
		<property name="freemarkerVariables">
			<map>
				<entry key="goodsDirective" value-ref="goodsTag"/>
				<entry key="currentTimeTag" value-ref="currentTimeTag"/>
			</map>
		</property>
		<property name="freemarkerSettings">  
            <props>
            	模板更新间隔，发布时建议设置为较大数字
                <prop key="template_update_delay">0</prop>  
                <prop key="locale">zh_CN</prop>  
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>  
                <prop key="date_format">yyyy-MM-dd</prop>  
                <prop key="number_format">#.##</prop>  
            </props>  
        </property> 
	</bean> -->

	<!-- freemarker视图解析器 -->
	<!-- <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="suffix" value=".html" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		把spring的RequestContext对象暴露为变量request，页面利用${request.contextPath}来获取应用程序的contextPath
		<property name="requestContextAttribute" value="request" />
	</bean> -->

	<!-- 配置jsp视图解析器 -->
	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/" />
		<property name="suffix" value=".jsp" />
	</bean>
	

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		默认编码
		<property name="defaultEncoding" value="utf-8" />
		文件大小最大值
		<property name="maxUploadSize" value="10485760000" />
		内存中的最大值
		<property name="maxInMemorySize" value="40960" />
	</bean> -->
	
	<!-- 读取properties文件 -->
	<util:properties id="configProperties" location="classpath:config.properties" />
	
	<!-- 定义事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 事务控制 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	
<!-- 	<import resource="ActiveMQ.xml" /> -->

	<!-- 配置作业类 -->
	<!-- <bean id="orderInfoOvertimeHandle" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.wdcf.dj.quartz.OrderInfoOvertimeHandle" />
		<property name="jobDataMap">
			<map>
				<entry key="orderService" value-ref="orderService" />
			</map>
		</property>
	</bean> -->
	
	<!-- 配置触发器 -->
	<!-- <bean id="orderInfoOvertimeHandleTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="orderInfoOvertimeHandle" />
		每分钟执行一次定时任务
		<property name="cronExpression" value="0 0-59/1 * * * ?" />
		每天晚上1:30:30触发定时任务
		<property name="cronExpression" value="30 30 1 * * ?"/>
	</bean>  -->
	<!-- =============================每天购物返现定时任务======================================== -->
	<!--配置石英调度 (购物返现每天执行)-->
	<!-- <bean id="jobOrderBean" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.wdcf.dj.quartz.QuartzCalculateOrder"/>
		特殊的注入方式 
		<property name="jobDataMap">
			<map>
				<entry key="orderService" value-ref="orderService"/>
			</map>
		</property>                
	</bean> -->
	<!--触发器配置 (购物返现每天执行)-->
	<!-- <bean id="orderCronTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="jobOrderBean"/>
        每天凌晨0点触发事件 	
		<property name="cronExpression" value="58 59 23 * * ? *"/>
		<property name="cronExpression" value="0 0 0 * * ? *"/>
	</bean> -->
	<!-- =============================每天购物返现定时任务结束======================================== -->
	<!--任务调度工厂 -->
	<!-- <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="orderCronTriggerBean"/>
				<ref bean="orderInfoOvertimeHandleTrigger"/>
			</list>
		</property>
	</bean>	 -->
	
	<mvc:view-controller path="/user/goUpdataPassword.do" view-name="user/forgetPassword"/>
	<mvc:view-controller path="/user/goResetPassword.do" view-name="user/resetPassword"/>
	<mvc:view-controller path="/user/goChangePassword.do" view-name="user/changePassword"/>
</beans>